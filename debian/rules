#!/usr/bin/make -f
# Sample debian/rules that uses debhelper. 
# This file is public domain software, originally written by Joey Hess.
#
# This version is for a hypothetical package that builds an
# architecture-dependant package, as well as an architecture-independent
# package.

# Uncomment this to turn on verbose mode. 
#export DH_VERBOSE=1

TMP=`pwd`/debian/tmp
TMP_DOC=`pwd`/debian/zinc-doc
TMP_PERL=`pwd`/debian/zinc-perl
TMP_PYTHON=$(shell echo `pwd`/debian/zinc-python)


DEFAULT_VERSION_PYTHON=$(shell echo `dpkg -p python| grep -e "^Version:" |cut -d" " -f2|cut -d"." -f1-2`)

build: build-stamp

build-stamp:
	dh_testdir

	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	-rm -f build-stamp 
	-rm -f config.cache
	-$(MAKE) clean

	-cd Python && python setup.py clean
	dh_clean

install: build
	dh_testdir
	dh_testroot
	dh_clean -k
	dh_installdirs

#
# Configuring/compiling/installing for Tcl.
	./configure --prefix=/usr --exec_prefix=/usr --enable-gl --with-tcl=/usr/lib/tcl8.4 --with-tk=/usr/lib/tk8.4 --x-libraries=/usr/X11R6/lib
	make
#	make install prefix=$(TMP)/usr
	make install DESTDIR=$(TMP)
#
# Making/installing the documentation
	make pdf html
	-mkdir -p $(TMP_DOC)/usr/share/doc/zinc-doc/refman
	-install -m644 doc/refman.pdf $(TMP_DOC)/usr/share/doc/zinc-doc
	-install -m644 doc/*.html doc/*.css doc/*.png $(TMP_DOC)/usr/share/doc/zinc-doc/refman

#
# Configuring/compiling/installing for Python.
	-cd Python && python setup.py install --prefix=$(TMP_PYTHON)/usr

#
# Configuring/compiling/installing for perl/Tk.
	-mkdir -p $(TMP_PERL)
	(cd Perl; ./export2cpan)
	(cd export2cpan/tk-zinc; perl Makefile.PL; make; make pure_install prefix=`pwd`/../../debian/zinc-perl/usr INSTALLDIRS=vendor PREFIX=`pwd`/../../debian/zinc-perl/usr)

	find $(TMP_PERL)/usr/lib/perl5  -type f -name .packlist | xargs rm -f

# Build architecture-independent files here.
binary-indep: build install
	dh_testdir -i
	dh_testroot -i
	dh_installchangelogs -i
	dh_installdocs -i BUGS
	dh_installexamples -i
#	dh_install --sourcedir=debian/tmp
#	dh_installmenu -i
#	dh_installdebconf -i
#	dh_installlogrotate -i
#	dh_installemacsen -i
#	dh_installpam -i
#	dh_installmime -i
#	dh_installinit -i
#	dh_installcron -i
#	dh_installinfo -i
#	dh_undocumented -i
	dh_installman -i
	dh_link -i
	dh_compress -i --exclude=.pdf --exclude=.py
	dh_fixperms -i
	dh_installdeb -i
#	dh_perl -i
	dh_gencontrol -i
	dh_md5sums -i
	dh_builddeb -i

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir -a
	dh_testroot -a
	dh_installchangelogs -a
	dh_installdocs -a
	dh_installexamples -a
	dh_installmenu -a
#	dh_installdebconf -a
#	dh_installlogrotate -a
#	dh_installemacsen -a
#	dh_installpam -a
#	dh_installmime -a
#	dh_installinit -a
#	dh_installcron -a
#	dh_installinfo -a
#	dh_undocumented -a
	dh_installman -a
	dh_strip -a
	dh_link -a
	dh_compress -a --exclude=.pdf
	dh_fixperms -a
#	dh_makeshlibs -a
	dh_installdeb -a
#	dh_perl -a
	dh_shlibdeps -a
	dh_gencontrol -a
	dh_md5sums -a
	dh_builddeb -a

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
